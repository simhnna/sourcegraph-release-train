diff --git a/client/shared/src/codeintel/legacy-extensions/util/api.ts b/client/shared/src/codeintel/legacy-extensions/util/api.ts
index 2aa48caa3d..e39e310b0b 100644
--- a/client/shared/src/codeintel/legacy-extensions/util/api.ts
+++ b/client/shared/src/codeintel/legacy-extensions/util/api.ts
@@ -140,10 +140,10 @@ export class API {
         `
 
         interface IntrospectionResponse {
-            __type: { fields: { name: string }[] }
+            __type?: { fields: { name: string }[] }
         }
 
-        return (await queryGraphQL<IntrospectionResponse>(introspectionQuery)).__type.fields.some(
+        return (await queryGraphQL<IntrospectionResponse>(introspectionQuery)).__type?.fields.some(
             field => field.name === 'isFork'
         )
     }
@@ -166,10 +166,10 @@ export class API {
         `
 
         interface IntrospectionResponse {
-            __type: { fields: { name: string }[] }
+            __type?: { fields: { name: string }[] }
         }
 
-        return (await queryGraphQL<IntrospectionResponse>(introspectionQuery)).__type.fields.some(
+        return (await queryGraphQL<IntrospectionResponse>(introspectionQuery)).__type?.fields.some(
             field => field.name === 'localCodeIntel'
         )
     })
@@ -191,10 +191,10 @@ export class API {
         `
 
         interface IntrospectionResponse {
-            __type: { fields: { name: string }[] }
+            __type?: { fields: { name: string }[] }
         }
 
-        return (await queryGraphQL<IntrospectionResponse>(introspectionQuery)).__type.fields.some(
+        return (await queryGraphQL<IntrospectionResponse>(introspectionQuery)).__type?.fields.some(
             field => field.name === 'symbolInfo'
         )
     })
@@ -216,10 +216,10 @@ export class API {
         `
 
         interface IntrospectionResponse {
-            __type: { fields: { name: string }[] }
+            __type?: { fields: { name: string }[] }
         }
 
-        return (await queryGraphQL<IntrospectionResponse>(introspectionQuery)).__type.fields.some(
+        return (await queryGraphQL<IntrospectionResponse>(introspectionQuery)).__type?.fields.some(
             field => field.name === 'range'
         )
     })
